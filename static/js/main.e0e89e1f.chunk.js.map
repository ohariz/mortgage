{"version":3,"sources":["conts.js","utils.js","Chart.js","Rates.js","Settings.js","Table.js","App.js","index.js"],"names":["DEFAULT_SETTINGS","price","priceInflation","includeEquity","rent","rentInflation","interest","DEFAULT_RATES","downpayment","rate","points","COLORS","formatCurrency","num","Math","abs","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getColor","index","length","Wrapper","styled","div","Chart","data","formattedData","values","map","_","i","name","forEach","value","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","Tooltip","formatter","key","Line","type","dataKey","stroke","activeDot","r","Row","ButtonRow","DotWrapper","span","color","Rates","rates","setRates","updateRow","ratesCopy","splice","parseFloat","row","TextField","id","size","sx","label","onChange","e","target","inputProps","step","Button","variant","minWidth","onClick","deleteRow","Settings","settings","setSettings","getNumberFieldSetter","FormControlLabel","control","Checkbox","checked","TableCell","props","padding","Table","TableHead","TableRow","Array","keys","TableBody","monthlyPayment","Heading","h1","Flex","App","useState","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","effectiveRate","pow","push","equity","computeData","ReactDOM","render","StrictMode","styles","css","document","getElementById"],"mappings":"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","file":"static/js/main.e0e89e1f.chunk.js","sourcesContent":["export const EPS = 0.0000000001;\r\n\r\nexport const DEFAULT_SETTINGS = {\r\n  price: 1000000,\r\n  priceInflation: 3,\r\n  includeEquity: true,\r\n  rent: 2000,\r\n  rentInflation: 3,\r\n  interest: 5,\r\n};\r\n\r\nexport const DEFAULT_RATES = [\r\n  { downpayment: 20, rate: 3, points: 1 },\r\n  { downpayment: 20, rate: 3.125, points: 0 },\r\n  { downpayment: 25, rate: 3, points: 0 },\r\n];\r\n\r\nexport const COLORS = [\r\n  '#6929c4',\r\n  '#1192e8',\r\n  '#005d5d',\r\n  '#9f1853',\r\n  '#fa4d56',\r\n  '#570408',\r\n  '#198038',\r\n  '#002d9c',\r\n];\r\n","import { COLORS, EPS } from './conts';\r\n\r\nexport function formatCurrency(num) {\r\n  return `${num < -0.0001 ? '-' : '+'}$${Math.abs(num).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\nexport function clipNumber(num) {\r\n  return parseFloat(num.toFixed(2));\r\n};\r\n\r\nexport function getColor(index) {\r\n  return COLORS[index % COLORS.length];\r\n};\r\n\r\nexport function computeData(settings, rates) {\r\n  const { price, priceInflation, includeEquity, rent, rentInflation, interest } = settings;\r\n  return rates.map(({ downpayment, rate, points }) => {\r\n    const effectiveRate = (rate || EPS) / 100 / 12;\r\n    const monthlyPayment = effectiveRate * price * (1 - downpayment / 100) / (1 - Math.pow(1 + effectiveRate, -30 * 12));\r\n    const initialValue = -price * (downpayment + points) / 100;\r\n    const values = [initialValue];\r\n    for (let index = 1; index <= 30; index++) {\r\n      values.push(\r\n        values[index - 1] * (1 + (interest || 0) / 100)\r\n        - monthlyPayment * 12\r\n        + (rent || 0) * 12 * Math.pow(1 + (rentInflation || 0) / 100, index - 1),\r\n      );\r\n    }\r\n    if (includeEquity) {\r\n      values.forEach((value, index) => {\r\n        const equity =\r\n          (price - monthlyPayment * (1 - Math.pow(1 + effectiveRate, -12 * (30 - index))) / effectiveRate)\r\n          * Math.pow(1 + (priceInflation || 0) / 100, index);\r\n        values[index] = equity + value;\r\n      });\r\n    }\r\n    return ({ key: `${downpayment}%\\t${rate}%${points ? `\\t${points}%` : ''}`, monthlyPayment, values });\r\n  });\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport { getColor, formatCurrency } from './utils';\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 1 1 auto;\r\n`;\r\n\r\nexport default function Chart({ data }) {\r\n  const formattedData = data.length > 0 ? data[0].values.map((_, i) => ({ name: `${i}` })) : [];\r\n  data.forEach(({ values }, i) => {\r\n    values.forEach((value, index) => {\r\n      formattedData[index][`${i + 1}`] = value;\r\n    });\r\n  });\r\n  return (\r\n    <Wrapper>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={formattedData}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"4\" />\r\n          <Tooltip formatter={formatCurrency} />\r\n          {data.map(({ key }, i) => (\r\n            <Line key={key} type=\"monotone\" dataKey={`${i + 1}`} stroke={getColor(i)} activeDot={{ r: 8 }} />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { getColor } from './utils';\r\n\r\nconst Wrapper = styled.div`\r\n  flex: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  margin-left: 24px;\r\n`;\r\n\r\nconst DotWrapper = styled.span(({ color }) => ({ color }));\r\n\r\nexport default function Rates({ rates, setRates }) {\r\n  const updateRow = (index, key, value) => {\r\n    const ratesCopy = [...rates];\r\n    ratesCopy.splice(index, 1, { ...rates[index], [key]: parseFloat(value)});\r\n    setRates(ratesCopy);\r\n  };\r\n  const deleteRow = (index) => {\r\n    const ratesCopy = [...rates];\r\n    ratesCopy.splice(index, 1);\r\n    setRates(ratesCopy);\r\n  };\r\n  const addRow = () => {\r\n    setRates([...rates, { downpayment: 0, rate: 0, points:0 }]);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {rates.map((row, index) => (\r\n        <Row key={index}>\r\n          <DotWrapper color={getColor(index)}>⦿</DotWrapper>\r\n          <TextField\r\n            id={`downpaymentInput${index}`}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            sx={{ width: 120 }}\r\n            label=\"Downpayment (%)\"\r\n            value={row.downpayment}\r\n            onChange={(e) => updateRow(index, 'downpayment', e.target.value)}\r\n          />\r\n          <TextField\r\n            id={`rateInput${index}`}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            label=\"Rate (%)\"\r\n            sx={{ width: 120 }}\r\n            inputProps={{ step: 0.125 }}\r\n            value={row.rate}\r\n            onChange={(e) => updateRow(index, 'rate', e.target.value)}\r\n          />\r\n          <TextField\r\n            id={`pointsInput${index}`}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            label=\"Points (%)\"\r\n            sx={{ width: 120 }}\r\n            inputProps={{ step: 0.25 }}\r\n            value={row.points}\r\n            onChange={(e) => updateRow(index, 'points', e.target.value)}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            sx={{ minWidth: 0, height: 40, width: 40 }}\r\n            onClick={() => deleteRow(index)}\r\n          >\r\n            -\r\n          </Button>\r\n        </Row>\r\n      ))}\r\n      <ButtonRow>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{ minWidth: 0, height: 40, width: 80 }}\r\n          onClick={() => addRow()}\r\n        >\r\n          +\r\n        </Button>\r\n      </ButtonRow>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px;\r\n`;\r\n\r\nexport default function Settings({ settings, setSettings }) {\r\n  const getNumberFieldSetter = (key) => (e) => setSettings({ ...settings, [key]: e.target.value });\r\n  const getCheckboxSetter = (key) => () => setSettings({ ...settings, [key]: !settings[key] });\r\n  return (\r\n    <Wrapper>\r\n      <TextField\r\n        id=\"priceInput\"\r\n        type=\"number\"\r\n        size=\"small\"\r\n        label=\"Purchase price ($)\"\r\n        value={settings.price}\r\n        onChange={getNumberFieldSetter('price')}\r\n      />\r\n      <TextField\r\n        id=\"priceInflationInput\"\r\n        type=\"number\"\r\n        size=\"small\"\r\n        label=\"Projected value inflation (%)\"\r\n        value={settings.priceInflation}\r\n        onChange={getNumberFieldSetter('priceInflation')}\r\n      />\r\n      <FormControlLabel\r\n        control={(\r\n          <Checkbox\r\n            id=\"includeEquityInput\"\r\n            checked={settings.includeEquity}\r\n            onChange={getCheckboxSetter('includeEquity')}\r\n          />\r\n        )}\r\n        label=\"Include property equity\"\r\n      />\r\n      <TextField\r\n        id=\"rentInput\"\r\n        type=\"number\"\r\n        size=\"small\"\r\n        label=\"Monthly rent savings/earnings ($)\"\r\n        value={settings.rent}\r\n        onChange={getNumberFieldSetter('rent')}\r\n      />\r\n      <TextField\r\n        id=\"rentInflationInput\"\r\n        type=\"number\"\r\n        size=\"small\"\r\n        label=\"Projected yearly rent inflation (%)\"\r\n        value={settings.rentInflation}\r\n        onChange={getNumberFieldSetter('rentInflation')}\r\n      />\r\n      <div />\r\n      <TextField\r\n        id=\"interestInput\"\r\n        type=\"number\"\r\n        size=\"small\"\r\n        label=\"Projected interest on cash (%)\"\r\n        value={settings.interest}\r\n        onChange={getNumberFieldSetter('interest')}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import MUITable from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport MUITableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { formatCurrency } from './utils';\r\n\r\nfunction TableCell(props) {\r\n  return <MUITableCell sx={{ padding: '6px 8px' }} {...props} />;\r\n};\r\n\r\nexport default function Table({ data }) {\r\n  return (\r\n    <MUITable size=\"small\">\r\n      <TableHead>\r\n        <TableRow key=\"head\">\r\n          <TableCell />\r\n          <TableCell key=\"m\">Monthly payment</TableCell>\r\n          <TableCell key=\"0\">Initial cost</TableCell>\r\n          {[...Array(30).keys()].map((index) =>\r\n            index > 4 && (index + 1) % 5 !== 0 ? null : (\r\n              <TableCell key={index + 1}>Year {index + 1}</TableCell>\r\n            )\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ key, monthlyPayment, values }, index) => (\r\n          <TableRow key={index}>\r\n            <TableCell key=\"title\">{key}</TableCell>\r\n            <TableCell key=\"payment\">{formatCurrency(monthlyPayment)}</TableCell>\r\n            {values.map((value, index) =>\r\n              index > 5 && index % 5 !== 0 ? null : (\r\n                <TableCell key={index}>{formatCurrency(value)}</TableCell>\r\n              )\r\n            )}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </MUITable>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport Chart from './Chart';\nimport Rates from './Rates';\nimport Settings from './Settings';\nimport Table from './Table';\nimport { DEFAULT_RATES, DEFAULT_SETTINGS } from './conts';\nimport { computeData } from './utils';\n\nconst Wrapper = styled.div`\n  margin: 16px;\n`;\n\nconst Heading = styled.h1`\n  margin: 16px 0 24px;\n`;\n\nconst Flex = styled.div`\n  width: 100%;\n  min-height: 400px;\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n`;\n\nexport default function App() {\n  const [settings, setSettings] = useState(JSON.parse(localStorage.getItem('settings')) || DEFAULT_SETTINGS);\n  const [rates, setRates] = useState(JSON.parse(localStorage.getItem('rates')) || DEFAULT_RATES);\n\n  useEffect(() => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    localStorage.setItem('rates', JSON.stringify(rates));\n  }, [settings, rates]);\n\n  const data = computeData(settings, rates);\n\n  return (\n    <Wrapper>\n      <Heading>Mortgage comparison tool</Heading>\n      <Settings settings={settings} setSettings={setSettings} />\n      <Flex>\n        <Rates rates={rates} setRates={setRates} />\n        <Chart data={data} />\n      </Flex>\n      <Table data={data} />\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Global, css } from '@emotion/react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global\n      styles={css`\n        body {\n          margin: 0;\n          font-family: 'Roboto', sans-serif;\n        }\n      `}\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}